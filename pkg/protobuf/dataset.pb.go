// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dataset.proto

package anndb_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Space int32

const (
	Space_Euclidean Space = 0
	Space_Manhattan Space = 1
	Space_Cosine    Space = 2
)

var Space_name = map[int32]string{
	0: "Euclidean",
	1: "Manhattan",
	2: "Cosine",
}

var Space_value = map[string]int32{
	"Euclidean": 0,
	"Manhattan": 1,
	"Cosine":    2,
}

func (x Space) String() string {
	return proto.EnumName(Space_name, int32(x))
}

func (Space) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{0}
}

type DatasetsChangeType int32

const (
	DatasetsChangeType_Create DatasetsChangeType = 0
	DatasetsChangeType_Delete DatasetsChangeType = 1
)

var DatasetsChangeType_name = map[int32]string{
	0: "Create",
	1: "Delete",
}

var DatasetsChangeType_value = map[string]int32{
	"Create": 0,
	"Delete": 1,
}

func (x DatasetsChangeType) String() string {
	return proto.EnumName(DatasetsChangeType_name, int32(x))
}

func (DatasetsChangeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{1}
}

type Dataset struct {
	Id                   []byte       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Dimension            uint32       `protobuf:"varint,2,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Space                Space        `protobuf:"varint,3,opt,name=space,proto3,enum=anndb_pb.Space" json:"space,omitempty"`
	PartitionCount       uint32       `protobuf:"varint,4,opt,name=partition_count,json=partitionCount,proto3" json:"partition_count,omitempty"`
	ReplicationFactor    uint32       `protobuf:"varint,5,opt,name=replication_factor,json=replicationFactor,proto3" json:"replication_factor,omitempty"`
	Partitions           []*Partition `protobuf:"bytes,6,rep,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Dataset) Reset()         { *m = Dataset{} }
func (m *Dataset) String() string { return proto.CompactTextString(m) }
func (*Dataset) ProtoMessage()    {}
func (*Dataset) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{0}
}

func (m *Dataset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataset.Unmarshal(m, b)
}
func (m *Dataset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataset.Marshal(b, m, deterministic)
}
func (m *Dataset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataset.Merge(m, src)
}
func (m *Dataset) XXX_Size() int {
	return xxx_messageInfo_Dataset.Size(m)
}
func (m *Dataset) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataset.DiscardUnknown(m)
}

var xxx_messageInfo_Dataset proto.InternalMessageInfo

func (m *Dataset) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Dataset) GetDimension() uint32 {
	if m != nil {
		return m.Dimension
	}
	return 0
}

func (m *Dataset) GetSpace() Space {
	if m != nil {
		return m.Space
	}
	return Space_Euclidean
}

func (m *Dataset) GetPartitionCount() uint32 {
	if m != nil {
		return m.PartitionCount
	}
	return 0
}

func (m *Dataset) GetReplicationFactor() uint32 {
	if m != nil {
		return m.ReplicationFactor
	}
	return 0
}

func (m *Dataset) GetPartitions() []*Partition {
	if m != nil {
		return m.Partitions
	}
	return nil
}

type Partition struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Partition) Reset()         { *m = Partition{} }
func (m *Partition) String() string { return proto.CompactTextString(m) }
func (*Partition) ProtoMessage()    {}
func (*Partition) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{1}
}

func (m *Partition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Partition.Unmarshal(m, b)
}
func (m *Partition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Partition.Marshal(b, m, deterministic)
}
func (m *Partition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Partition.Merge(m, src)
}
func (m *Partition) XXX_Size() int {
	return xxx_messageInfo_Partition.Size(m)
}
func (m *Partition) XXX_DiscardUnknown() {
	xxx_messageInfo_Partition.DiscardUnknown(m)
}

var xxx_messageInfo_Partition proto.InternalMessageInfo

func (m *Partition) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type DatasetsChange struct {
	Type                 DatasetsChangeType `protobuf:"varint,1,opt,name=type,proto3,enum=anndb_pb.DatasetsChangeType" json:"type,omitempty"`
	Dataset              *Dataset           `protobuf:"bytes,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DatasetsChange) Reset()         { *m = DatasetsChange{} }
func (m *DatasetsChange) String() string { return proto.CompactTextString(m) }
func (*DatasetsChange) ProtoMessage()    {}
func (*DatasetsChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_f69247dc9b20935f, []int{2}
}

func (m *DatasetsChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatasetsChange.Unmarshal(m, b)
}
func (m *DatasetsChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatasetsChange.Marshal(b, m, deterministic)
}
func (m *DatasetsChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatasetsChange.Merge(m, src)
}
func (m *DatasetsChange) XXX_Size() int {
	return xxx_messageInfo_DatasetsChange.Size(m)
}
func (m *DatasetsChange) XXX_DiscardUnknown() {
	xxx_messageInfo_DatasetsChange.DiscardUnknown(m)
}

var xxx_messageInfo_DatasetsChange proto.InternalMessageInfo

func (m *DatasetsChange) GetType() DatasetsChangeType {
	if m != nil {
		return m.Type
	}
	return DatasetsChangeType_Create
}

func (m *DatasetsChange) GetDataset() *Dataset {
	if m != nil {
		return m.Dataset
	}
	return nil
}

func init() {
	proto.RegisterEnum("anndb_pb.Space", Space_name, Space_value)
	proto.RegisterEnum("anndb_pb.DatasetsChangeType", DatasetsChangeType_name, DatasetsChangeType_value)
	proto.RegisterType((*Dataset)(nil), "anndb_pb.Dataset")
	proto.RegisterType((*Partition)(nil), "anndb_pb.Partition")
	proto.RegisterType((*DatasetsChange)(nil), "anndb_pb.DatasetsChange")
}

func init() {
	proto.RegisterFile("dataset.proto", fileDescriptor_f69247dc9b20935f)
}

var fileDescriptor_f69247dc9b20935f = []byte{
	// 388 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xbb, 0x49, 0x93, 0x92, 0x29, 0x71, 0xdd, 0x41, 0x20, 0xab, 0xf4, 0x60, 0x45, 0x42,
	0x58, 0x05, 0x0c, 0xb8, 0x07, 0x1e, 0x20, 0x29, 0x88, 0x43, 0x24, 0x64, 0xe8, 0xb9, 0x9a, 0xd8,
	0x43, 0xba, 0x52, 0xba, 0xbb, 0x78, 0x37, 0x87, 0xbc, 0x12, 0xaf, 0xc6, 0x4b, 0x20, 0x6f, 0x6a,
	0xbb, 0x60, 0xb8, 0xd9, 0xff, 0xff, 0xf9, 0x9f, 0x99, 0x5f, 0x86, 0x69, 0x49, 0x8e, 0x2c, 0xbb,
	0xd4, 0x54, 0xda, 0x69, 0x7c, 0x44, 0x4a, 0x95, 0xab, 0x1b, 0xb3, 0x3a, 0x83, 0x42, 0x57, 0xbc,
	0x57, 0x67, 0xbf, 0x04, 0x1c, 0x2d, 0xf6, 0x1c, 0x06, 0x30, 0x90, 0x65, 0x24, 0x62, 0x91, 0x3c,
	0xce, 0x07, 0xb2, 0xc4, 0x73, 0x98, 0x94, 0xf2, 0x8e, 0x95, 0x95, 0x5a, 0x45, 0x83, 0x58, 0x24,
	0xd3, 0xbc, 0x13, 0xf0, 0x05, 0x8c, 0xac, 0xa1, 0x82, 0xa3, 0x61, 0x2c, 0x92, 0x20, 0x3b, 0x49,
	0x9b, 0xfc, 0xf4, 0x6b, 0x2d, 0xe7, 0x7b, 0x17, 0x5f, 0xc2, 0x89, 0xa1, 0xca, 0x49, 0x27, 0xb5,
	0xba, 0x29, 0xf4, 0x56, 0xb9, 0xe8, 0xd0, 0x47, 0x05, 0xad, 0x3c, 0xaf, 0x55, 0x7c, 0x03, 0x58,
	0xb1, 0xd9, 0xc8, 0x82, 0x3c, 0xfa, 0x9d, 0x0a, 0xa7, 0xab, 0x68, 0xe4, 0xd9, 0xd3, 0x07, 0xce,
	0x47, 0x6f, 0xe0, 0x25, 0x40, 0x1b, 0x60, 0xa3, 0x71, 0x3c, 0x4c, 0x8e, 0xb3, 0x27, 0xdd, 0x0e,
	0x5f, 0x1a, 0x2f, 0x7f, 0x80, 0xcd, 0x9e, 0xc3, 0xa4, 0x35, 0xfe, 0x3e, 0x77, 0xa6, 0x21, 0xb8,
	0x6f, 0xc2, 0xce, 0x6f, 0x49, 0xad, 0x19, 0xdf, 0xc1, 0xa1, 0xdb, 0x19, 0xf6, 0x4c, 0x90, 0x9d,
	0x77, 0xe9, 0x7f, 0x72, 0xdf, 0x76, 0x86, 0x73, 0x4f, 0xe2, 0x2b, 0x38, 0xba, 0x6f, 0xdd, 0x17,
	0x76, 0x9c, 0x9d, 0xf6, 0x3e, 0xca, 0x1b, 0xe2, 0xe2, 0x3d, 0x8c, 0x7c, 0x55, 0x38, 0x85, 0xc9,
	0xd5, 0xb6, 0xd8, 0xc8, 0x92, 0x49, 0x85, 0x07, 0xf5, 0xeb, 0x92, 0xd4, 0x2d, 0x39, 0x47, 0x2a,
	0x14, 0x08, 0x30, 0x9e, 0x6b, 0x2b, 0x15, 0x87, 0x83, 0x8b, 0xd7, 0x80, 0xfd, 0xd9, 0x9e, 0xa8,
	0x98, 0x1c, 0x87, 0x07, 0xf5, 0xf3, 0x82, 0x37, 0xec, 0x38, 0x14, 0xd9, 0x4f, 0xd1, 0x9e, 0xb4,
	0x24, 0x45, 0x6b, 0xae, 0xf0, 0x2d, 0x0c, 0x3f, 0xb1, 0xc3, 0xa7, 0xdd, 0x5a, 0xd7, 0xd7, 0x9f,
	0x17, 0x39, 0xff, 0xd8, 0xb2, 0x75, 0x67, 0xfd, 0x6d, 0x31, 0x6d, 0xb2, 0xb1, 0x6f, 0xfe, 0x8b,
	0xff, 0xd0, 0xcc, 0xff, 0xdf, 0x8c, 0x67, 0x9d, 0x7c, 0x75, 0x67, 0xdc, 0x6e, 0xc9, 0xd6, 0xd2,
	0x9a, 0x57, 0x63, 0xff, 0x43, 0x5e, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x16, 0x57, 0x0b, 0x52,
	0xb7, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DatasetManagerClient is the client API for DatasetManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DatasetManagerClient interface {
	Get(ctx context.Context, in *UUIDRequest, opts ...grpc.CallOption) (*Dataset, error)
	Create(ctx context.Context, in *Dataset, opts ...grpc.CallOption) (*Dataset, error)
	Delete(ctx context.Context, in *UUIDRequest, opts ...grpc.CallOption) (*EmptyMessage, error)
}

type datasetManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewDatasetManagerClient(cc grpc.ClientConnInterface) DatasetManagerClient {
	return &datasetManagerClient{cc}
}

func (c *datasetManagerClient) Get(ctx context.Context, in *UUIDRequest, opts ...grpc.CallOption) (*Dataset, error) {
	out := new(Dataset)
	err := c.cc.Invoke(ctx, "/anndb_pb.DatasetManager/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datasetManagerClient) Create(ctx context.Context, in *Dataset, opts ...grpc.CallOption) (*Dataset, error) {
	out := new(Dataset)
	err := c.cc.Invoke(ctx, "/anndb_pb.DatasetManager/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datasetManagerClient) Delete(ctx context.Context, in *UUIDRequest, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/anndb_pb.DatasetManager/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DatasetManagerServer is the server API for DatasetManager service.
type DatasetManagerServer interface {
	Get(context.Context, *UUIDRequest) (*Dataset, error)
	Create(context.Context, *Dataset) (*Dataset, error)
	Delete(context.Context, *UUIDRequest) (*EmptyMessage, error)
}

// UnimplementedDatasetManagerServer can be embedded to have forward compatible implementations.
type UnimplementedDatasetManagerServer struct {
}

func (*UnimplementedDatasetManagerServer) Get(ctx context.Context, req *UUIDRequest) (*Dataset, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedDatasetManagerServer) Create(ctx context.Context, req *Dataset) (*Dataset, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedDatasetManagerServer) Delete(ctx context.Context, req *UUIDRequest) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterDatasetManagerServer(s *grpc.Server, srv DatasetManagerServer) {
	s.RegisterService(&_DatasetManager_serviceDesc, srv)
}

func _DatasetManager_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UUIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatasetManagerServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anndb_pb.DatasetManager/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatasetManagerServer).Get(ctx, req.(*UUIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatasetManager_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Dataset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatasetManagerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anndb_pb.DatasetManager/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatasetManagerServer).Create(ctx, req.(*Dataset))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatasetManager_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UUIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatasetManagerServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anndb_pb.DatasetManager/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatasetManagerServer).Delete(ctx, req.(*UUIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DatasetManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "anndb_pb.DatasetManager",
	HandlerType: (*DatasetManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _DatasetManager_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _DatasetManager_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DatasetManager_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataset.proto",
}
